<?xml version="1.0" encoding="UTF-8"?>
<testsuites>
  <testsuite name="Exporting to txt, pdf, rtf, and docx" timestamp="2024-11-10T13:49:43Z" hostname="02fc414f3358" tests="8" skipped="0" failures="0" errors="0" time="3.814">
    <testcase time="0.64" classname="Exporting_to_txt_pdf_rtf_and_docx" name="export_as_txt_works_with_and_without_pagination"/>
    <testcase time="0.166" classname="Exporting_to_txt_pdf_rtf_and_docx" name="export_as_txt_works_with_and_without_pagination"/>
    <testcase time="0.0800000000000001" classname="Exporting_to_txt_pdf_rtf_and_docx" name="path_enriched_df_works_for_tables_with_a_column_that_has_all_length_1_elements"/>
    <testcase time="1.677" classname="Exporting_to_txt_pdf_rtf_and_docx" name="export_as_doc_works_thanks_to_tt_to_flextable"/>
    <testcase time="0.218" classname="Exporting_to_txt_pdf_rtf_and_docx" name="export_as_doc_works_thanks_to_tt_to_flextable"/>
    <testcase time="0.745" classname="Exporting_to_txt_pdf_rtf_and_docx" name="export_as_doc_works_thanks_to_tt_to_flextable"/>
    <testcase time="0.00300000000000011" classname="Exporting_to_txt_pdf_rtf_and_docx" name="export_as_doc_works_thanks_to_tt_to_flextable"/>
    <testcase time="0.285" classname="Exporting_to_txt_pdf_rtf_and_docx" name="export_as_doc_produces_a_warning_if_manual_column_widths_are_used"/>
  </testsuite>
  <testsuite name="tt_as_flextable" timestamp="2024-11-10T13:49:46Z" hostname="02fc414f3358" tests="13" skipped="0" failures="1" errors="1" time="5.581">
    <testcase time="0.786" classname="tt_as_flextable" name="Can_create_flextable_object_that_works_with_different_styles">
      <failure type="failure" message="sum(unlist(nrow(ft))) not equal to 20. ('test-tt_as_flextable.R:25:3')">sum(unlist(nrow(ft))) not equal to 20.
1/1 mismatches
[1] 10 - 20 == -10</failure>
    </testcase>
    <testcase time="0.399999999999999" classname="tt_as_flextable" name="Can_create_flextable_object_that_works_with_different_styles"/>
    <testcase time="0.431" classname="tt_as_flextable" name="Can_create_flextable_object_that_works_with_different_styles"/>
    <testcase time="0.43" classname="tt_as_flextable" name="Can_create_flextable_object_that_works_with_different_styles"/>
    <testcase time="0.915" classname="tt_as_flextable" name="Can_create_flextable_object_that_works_with_different_styles"/>
    <testcase time="0.00200000000000067" classname="tt_as_flextable" name="Can_create_flextable_object_that_works_with_different_styles"/>
    <testcase time="0.000999999999999446" classname="tt_as_flextable" name="Can_create_flextable_object_that_works_with_different_styles"/>
    <testcase time="0.00499999999999989" classname="tt_as_flextable" name="Can_create_flextable_object_that_works_with_different_styles"/>
    <testcase time="0.815" classname="tt_as_flextable" name="tt_to_flextable_does_not_create_different_cells_when_colcounts_or_multiple_on_different_lines"/>
    <testcase time="0.494" classname="tt_as_flextable" name="check_titles_bold_and_html_theme"/>
    <testcase time="0.282" classname="tt_as_flextable" name="check_titles_bold_and_html_theme"/>
    <testcase time="0.290000000000001" classname="tt_as_flextable" name="check_titles_bold_and_html_theme"/>
    <testcase time="0.729999999999999" classname="tt_as_flextable" name="check_pagination">
      <error type="error" message="Error in `pos_splits(pos)`: could not find function &quot;pos_splits&quot; ('test-tt_as_flextable.R:145:3')">Error in `pos_splits(pos)`: could not find function "pos_splits"
Backtrace:
     ▆
  1. ├─testthat::expect_silent(...) at test-tt_as_flextable.R:145:3
  2. │ └─testthat:::quasi_capture(enquo(object), NULL, evaluate_promise)
  3. │   ├─testthat (local) .capture(...)
  4. │   │ ├─withr::with_output_sink(...)
  5. │   │ │ └─base::force(code)
  6. │   │ ├─base::withCallingHandlers(...)
  7. │   │ └─base::withVisible(code)
  8. │   └─rlang::eval_bare(quo_get_expr(.quo), quo_get_env(.quo))
  9. └─rtables.officer::tt_to_flextable(tbl, paginate = TRUE, lpp = 100)
 10.   └─base::lapply(...)
 11.     └─rtables.officer (local) FUN(X[[i]], ...)
 12.       └─rtables.officer:::.figure_out_colinds(tb, tt)
 13.         └─rtables.officer:::.tab_to_colpath_set(subtab)
 14.           └─base::vapply(...)
 15.             └─rtables.officer (local) FUN(X[[i]], ...)
 16.               ├─base::paste(pos_to_path(tree_pos(y)), collapse = " ")
 17.               └─rtables.officer:::pos_to_path(tree_pos(y))</error>
    </testcase>
  </testsuite>
</testsuites>
